import { isString } from 'lodash';
/**
 * @ignore
 */
export class WordTokenizer {
    /**
     * Tokenize a given text
     * e.g.
     * given: "deep-learning ian good fellow learning jason shin shin"
     * returns: [ 'deep', 'learning', 'ian', 'good', 'fellow', 'learning', 'jason', 'shin', 'shin' ]
     * @param text
     * @returns {string[]}
     */
    tokenize(text) {
        if (!isString(text)) {
            throw new Error('Cannot process a non string value');
        }
        const regex = /[^A-Za-zА-Яа-я0-9_]+/g;
        return text.split(regex);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmxwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi91dGlscy9ubHAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUVsQzs7R0FFRztBQUNILE1BQU07SUFDSjs7Ozs7OztPQU9HO0lBQ0ksUUFBUSxDQUFDLElBQUk7UUFDbEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNuQixNQUFNLElBQUksS0FBSyxDQUFDLG1DQUFtQyxDQUFDLENBQUM7U0FDdEQ7UUFDRCxNQUFNLEtBQUssR0FBRyx1QkFBdUIsQ0FBQztRQUN0QyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQztDQUNGIn0=